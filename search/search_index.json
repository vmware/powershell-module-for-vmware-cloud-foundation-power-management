{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#powershell-module-for-vmware-cloud-foundation-power-management","title":"PowerShell Module for VMware Cloud Foundation Power Management","text":"<p><code>VMware.CloudFoundation.PowerManagement</code> is a PowerShell module that supports the ability to automate the shut down and start up of the VMware Cloud Foundati\u043en  management domain or VI workload domains using aPowerShell script.</p> <p> \u00a0 PowerShell Gallery</p>"},{"location":"#requirements","title":"Requirements","text":""},{"location":"#platforms","title":"Platforms","text":"<p>The following table lists the supported platforms for this module.</p> Platform vSAN ReadyNodes Dell VxRail  \u00a0 VMware Cloud Foundation 5.1  \u00a0 VMware Cloud Foundation 5.0  \u00a0 VMware Cloud Foundation 4.5  \u00a0 VMware Cloud Foundation 4.4  \u00a0 VMware Cloud Foundation 4.3 <p>Note</p> <p>VMware Cloud Foundation on Dell VxRail cluster shutdown API cannot be used when the managed VMware vCenter Server instance is running on VxRail. See vxrail-cluster-shutdown.</p>"},{"location":"#operating-systems","title":"Operating Systems","text":"<p>The following table lists the supported operating systems for this module.</p> Operating System Version  \u00a0 Microsoft Windows Server 2019, 2022  \u00a0 Microsoft Windows 10, 11"},{"location":"#powershell","title":"PowerShell","text":"<p>The following table lists the supported editions and versions of PowerShell for this module.</p> Edition Version PowerShell Core &gt;= 7.2.0"},{"location":"#module-dependencies","title":"Module Dependencies","text":"<p>The following table lists the required PowerShell module dependencies for this module.</p> PowerShell Module Version Publisher Reference VMware.PowerCLI &gt;= 13.3.0 Broadcom Documentation PowerVCF &gt;= 2.4.1 Broadcom Documentation PowerValidatedSolutions &gt;= 2.11.0 Broadcom Documentation PoshSSH &gt;= 3.0.8 Carlos Perez GitHub"},{"location":"license/","title":"License","text":"<p>BSD 2-Clause License</p> <p>Copyright 2023-2024 Broadcom. All Rights Reserved.</p> <p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p> <ol> <li> <p>Redistributions of source code must retain the above copyright       notice, this list of conditions and the following disclaimer.</p> </li> <li> <p>Redistributions in binary form must reproduce the above       copyright notice, this list of conditions and the following       disclaimer in the documentation and/or other materials provided       with the distribution.</p> </li> </ol> <p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>"},{"location":"release-notes/","title":"Release History","text":""},{"location":"release-notes/#v150","title":"v1.5.0","text":"<p>Release Date: 2024-10-02</p> <p>Bugfix:</p> <ul> <li>Added support to <code>PowerManagement-ManagmentDomain.ps1</code> and <code>PowerManagement-WorkloadDomain.ps1</code> for vSAN File Services to be excluded from customer virtual machines. GH-95</li> <li>Added exit to Tanzu Code in <code>PowerManagement-WorkloadDomain.ps1</code>GH-97</li> <li>Added support to <code>PowerManagement-ManagmentDomain.ps1</code> and <code>PowerManagement-WorkloadDomain.ps1</code> for testing ESXi host connection before SSH connection. GH-98</li> <li>Fix for issue #101GH-106</li> <li>Fix for issue #104GH-106</li> </ul> <p>Enhancement:</p> <ul> <li>Added check to verify if workload domain vCenter Server instances are still powered on before starting the shutdown of the management domain to <code>PowerManagement-ManagmentDomain.ps1</code>. GH-90</li> <li>Various improvements in workflows, log messages, file syntax. GH-106 and GH-107</li> </ul> <p>Refactor:</p> <ul> <li>Replaced the use of <code>Test-NetConnection</code> with <code>Test-EndpointConnection</code> from the PowerShell module dependency <code>PowerValidatedSolutions</code>. GH-85</li> <li>Updated <code>PowerManagement-ManagmentDomain.ps1</code> to allow for FQDN or IP address of SDDC Manager. GH-92</li> <li>Removed obsolete and not used code in the sample scripts.</li> <li>Apply common formatting for the files. GH-107</li> </ul> <p>Chore:</p> <ul> <li>Updated <code>PowerVCF</code> from v2.3.0 to v2.4.1. GH-108</li> <li>Added <code>PowerValidatedSolutions</code> v2.8.0 as a PowerShell module dependency. GH-38</li> <li>Updated <code>PowerValidatedSolutions</code> from v2.8.0 to 2.11.0. GH-108</li> <li>Updated <code>Write-PowerManagementLogMessage</code> to set color for message types. This will allow for all references to use color based on function. GH-89</li> </ul>"},{"location":"release-notes/#v140","title":"v1.4.0","text":"<p>Release Date: 2023-12-05</p> <p>Enhancement:</p> <ul> <li>Added support for VMware Cloud Foundation 5.0 on Dell VxRail. GH-75</li> </ul>"},{"location":"release-notes/#v130","title":"v1.3.0","text":"<p>Release Date: 2023-11-16</p> <p>Enhancement:</p> <ul> <li>Added secure strings for sensitive parameters. GH-73</li> </ul>"},{"location":"release-notes/#v120","title":"v1.2.0","text":"<p>Release Date: 2023-07-25</p> <p>Enhancement:</p> <ul> <li>Updated each cmdlet to include the <code>.PARAMETER</code> details. GH-27</li> <li>Added support for VMware Cloud Foundation 5.0. GH-37</li> </ul> <p>Chore:</p> <ul> <li>Updated PowerVCF from v2.2.0 to v2.3.0. GH-38</li> <li>Updated Posh-SSH from v3.0.4 to v3.0.8. GH-38</li> </ul>"},{"location":"release-notes/#v110","title":"v1.1.0","text":"<p>Release Date: 2022-12-09</p> <p>The initial release of the PowerShell Module for VMware Cloud Foundation Power Management, <code>VMware.CloudFoundation.PowerManagement</code>, replacing <code>VMware.PowerManagement</code>.</p> <p>Enhancement:</p> <ul> <li>Sample scripts use the vSAN shutdown wizard API (VMware Cloud Foundation version 4.5 and later.)</li> <li>Added support for multiple clusters in a workload domain.</li> <li>Added support for NSX Managers that are shared between workload domains.</li> <li>Bugfixes and workflow improvements.</li> </ul>"},{"location":"community/","title":"Community","text":"<p>This PowerShell module is the work of many contributors and the project team appreciates your help!</p> <p>Thank you for your interest in the project. Whether it's a bug report, enhancement, correction, or additional documentation, we greatly value feedback and contributions from our community.</p> Name Title Role GitHub Ivaylo Ivanov Staff Solution Architect, VMware Maintainer Gary Blake Senior Staff Solutions Architect, VMware Maintainer Ryan Johnson Senior Staff Solutions Architect, VMware Maintainer Sowjana V Senior Member of Technical Staff, VMware Collaborator Bhumitra Nagar Senior Member of Technical Staff, VMware Collaborator Lakshmanan Shanmugam Staff Engineer, VMware Collaborator"},{"location":"community/code-of-conduct/","title":"Contributor Covenant Code of Conduct","text":""},{"location":"community/code-of-conduct/#our-pledge","title":"Our Pledge","text":"<p>We as members, contributors, and leaders pledge to make participation in the project and our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p> <p>We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.</p>"},{"location":"community/code-of-conduct/#our-standards","title":"Our Standards","text":"<p>Examples of behavior that contributes to a positive environment for our community include:</p> <ul> <li>Demonstrating empathy and kindness toward other people</li> <li>Being respectful of differing opinions, viewpoints, and experiences</li> <li>Giving and gracefully accepting constructive feedback</li> <li>Accepting responsibility and apologizing to those affected by our mistakes,   and learning from the experience</li> <li>Focusing on what is best not just for us as individuals, but for the   overall community</li> </ul> <p>Examples of unacceptable behavior include:</p> <ul> <li>The use of sexualized language or imagery, and sexual attention or   advances of any kind</li> <li>Trolling, insulting or derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or email   address, without their explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a   professional setting</li> </ul>"},{"location":"community/code-of-conduct/#enforcement-responsibilities","title":"Enforcement Responsibilities","text":"<p>Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.</p> <p>Community leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.</p>"},{"location":"community/code-of-conduct/#scope","title":"Scope","text":"<p>This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.</p>"},{"location":"community/code-of-conduct/#enforcement","title":"Enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at oss-coc@vmware.com. All complaints will be reviewed and investigated promptly and fairly.</p> <p>All community leaders are obligated to respect the privacy and security of the reporter of any incident.</p>"},{"location":"community/code-of-conduct/#enforcement-guidelines","title":"Enforcement Guidelines","text":"<p>Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:</p>"},{"location":"community/code-of-conduct/#1-correction","title":"1. Correction","text":"<p>Community Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.</p> <p>Consequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.</p>"},{"location":"community/code-of-conduct/#2-warning","title":"2. Warning","text":"<p>Community Impact: A violation through a single incident or series of actions.</p> <p>Consequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.</p>"},{"location":"community/code-of-conduct/#3-temporary-ban","title":"3. Temporary Ban","text":"<p>Community Impact: A serious violation of community standards, including sustained inappropriate behavior.</p> <p>Consequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.</p>"},{"location":"community/code-of-conduct/#4-permanent-ban","title":"4. Permanent Ban","text":"<p>Community Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior,  harassment of an individual, or aggression toward or disparagement of classes of individuals.</p> <p>Consequence: A permanent ban from any sort of public interaction within the community.</p>"},{"location":"community/code-of-conduct/#attribution","title":"Attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.</p> <p>Community Impact Guidelines were inspired by Mozilla's code of conduct enforcement ladder.</p> <p>For answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.</p>"},{"location":"community/contributing/","title":"Contributing","text":"<p>The project team welcomes contributions from the community. Whether it is a bug report, an enhancement request, or documentation update, we greatly value feedback and contributions from our community.</p> <p>Before you start working with project, please read our Developer Certificate of Origin.</p> <p>All contributions to this repository must be signed as described on that page. Your signature certifies that you wrote the patch or have the right to pass it on as an open-source patch.</p>"},{"location":"community/contributing/#issues","title":"Issues","text":"<p>We welcome you to use the GitHub issues for bug reports, enhancement requests, feature requests, or documentation updates.</p> <p>When filing an issue, please check existing open, or recently closed, issues to make sure someone else has not already reported the issue.</p> <p>Please try to include as much information as you can. Details like these are incredibly useful:</p> <ul> <li>A reproducible test case or series of steps.</li> <li>Any modifications you have made relevant to the bug.</li> <li>Anything unusual about your environment or deployment.</li> </ul> <p>You can also start a discussion on the discussions area to ask questions or share ideas.</p>"},{"location":"community/contributing/#pull-requests","title":"Pull Requests","text":"<p>Contributions using pull requests are appreciated. Before opening a pull request, please ensure that:</p> <ol> <li>You check existing open, and recently merged, pull requests to make sure it has not already been addressed for an upcoming release.</li> <li>You open a discussion to discuss any significant work with the maintainer(s).</li> <li>You open an issue with a clear description of the problem you are trying to solve if one does not already exist.</li> <li>You are working against the latest source on the <code>develop</code> branch.</li> </ol> <p>To submit a pull request, please:</p> <ol> <li>Fork the repository and clone your fork.</li> <li>Create a topic branch from the <code>develop</code> branch. For example, <code>feat/add-x</code> or <code>fix/update-y</code>.</li> <li>Modify the source. Please focus the scope on the specific change you are contributing.</li> <li>Ensure that local tests, if any, pass.</li> <li>Update the documentation, if required. See the <code>docs</code> directory for the documentation source.</li> <li>Commit to your fork using clear commit messages. Please use Conventional Commits.</li> <li>Submit a pull request, answering any default questions in the pull request, and linking to any related issues for context. See GitHub flavored markdown syntax for references.</li> <li>Submit a work in progress pull request as a draft pull request. Mark the pull request as ready for review when you are ready for feedback.</li> <li>Review any automated checks on the the pull request pass.</li> <li>Stay engaged in the pull request review process.</li> </ol> <p>GitHub provides additional document on forking a repository and creating a pull request.</p>"},{"location":"community/contributing/#contributor-workflow","title":"Contributor Workflow","text":"<p>This is a general outline of the workflow for contributing to this project:</p> <ul> <li>Create a topic branch from where you want to base your work.</li> <li>Make commits of logical units.</li> <li>Make sure your commit messages are in the proper format.</li> <li>Push your changes to a topic branch in your fork of the repository.</li> <li>Submit a pull request.</li> </ul> <p>Example:</p> <pre><code>git remote add upstream https://github.com/&lt;org-name&gt;/&lt;repo-name&gt;.git\ngit checkout --branch feat/add-x develop\ngit commit --signoff --message \"feat: add support for x\n  Added support for x.\n\n  Signed-off-by: Jane Doe &lt;jdoe@example.com&gt;\n\n  Ref: #123\"\ngit push origin feat/add-x\n</code></pre>"},{"location":"community/contributing/#formatting-commit-messages","title":"Formatting Commit Messages","text":"<p>We follow the conventions on How to Write a Git Commit Message and Conventional Commits.</p> <p>Be sure to include any related GitHub issue references in the commit message.</p> <p>Example:</p> <pre><code>feat: add support for x\n\nAdded support for x.\n\nSigned-off-by: Jane Doe &lt;jdoe@example.com&gt;\n\nRef: #123\n</code></pre> <p>See GitHub flavored markdown syntax for referencing issues, pull requests, and commits.</p>"},{"location":"community/contributing/#rebasing-the-pull-request-with-upstream","title":"Rebasing the Pull Request with Upstream","text":"<p>When your branch gets out of sync with the upstream <code>develop</code> branch, use the following to update:</p> <pre><code>git checkout feat/add-x\ngit fetch --all\ngit pull --rebase upstream develop\ngit push --force-with-lease origin feat/add-x\n</code></pre>"},{"location":"community/contributing/#updating-a-pull-request","title":"Updating a Pull Request","text":"<p>If your pull request fails to pass or needs changes based on code review, you will most likely want to squash these changes into existing commits.</p> <p>If your pull request contains a single commit or your changes are related to the most recent commit, you can simply amend the commit.</p> <pre><code>git add .\ngit commit --amend\ngit push --force-with-lease origin feat/add-x\n</code></pre> <p>If you need to squash changes into an earlier commit, you can use:</p> <pre><code>git add .\ngit commit --fixup &lt;commit&gt;\ngit rebase --interactive --autosquash develop\ngit push --force-with-lease origin feat/add-x\n</code></pre> <p>Be sure to add a comment to the pull request indicating your new changes are ready to review. GitHub does not generate a notification when you <code>git push</code>.</p>"},{"location":"community/support/","title":"Support","text":"<p> \u00a0 While this module is not supported by VMware Support Services, it is supported by the project maintainers and its community of users.</p> <p> \u00a0 Use the GitHub issues to report bugs or suggest enhancements.</p> <p> \u00a0 Issues are monitored by the maintainers and are prioritized based on criticality and community reactions.</p> <p> \u00a0 Before opening an issue, please search the issues and use the reactions to add votes to matching issues. Please include as much information as you can. Details like these are incredibly useful in helping the us evaluate and prioritize any changes:</p> <ul> <li>A reproducible test case or series of steps.</li> <li>Any modifications you've made relevant to the bug.</li> <li>Anything unusual about your environment or deployment.</li> </ul> <p> \u00a0 You can also start a discussion on the GitHub discussions area to ask questions or share ideas.</p>"},{"location":"documentation/","title":"Using the Module","text":""},{"location":"documentation/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Add forward and reverse DNS records for the client machine running the scripts.</p> </li> <li> <p>Verify that SDDC Manager is powered on and operational.</p> </li> <li> <p>Before you shut down the management domain, get the credentials for the management domain ESXi hosts and vCenter Server instance from SDDC Manager and save them for troubleshooting or a subsequent manual startup. Because SDDC Manager is powered off during each of these operations, you must save the credentials in advance.</p> </li> </ul> <p>To get the credentials, use the <code>Get-VCFCredential</code> cmdlet from the <code>PowerVCF</code> module.</p> <p>If using Windows 10 or 11, configure the PowerShell execution policy with the permissions required to run the commands.</p> <ul> <li> <p>Run the following command to get the active execution policy:</p> <pre><code>Execute Get-ExecutionPolicy\n</code></pre> </li> <li> <p>If the command returns <code>Restricted</code>, run the following command:</p> <pre><code>Set-ExecutionPolicy RemoteSigned\n</code></pre> </li> <li> <p>If the target system uses self-signed or untrusted certificates, configure PowerCLI to ignore.</p> <pre><code>Set-PowerCLIConfiguration -InvalidCertificateAction Ignore -Confirm:$false\n</code></pre> </li> </ul>"},{"location":"documentation/#sample-scripts","title":"Sample Scripts","text":"<ul> <li> <p><code>PowerManagement-ManagementDomain.ps1</code> - shutdown or startup all software components in the management domain.</p> <p>Note</p> <p>The script does not support shutdown of Aria Suite (formerly vRealize Suite).  Shut down the Aria Suite components in your environment before running the script.</p> </li> <li> <p><code>PowerManagement-WorkloadDomain.ps1</code> - Shut down or start up the management components for a workload domain.</p> <p>Note</p> <p>The script does not support vSphere with Tanzu.</p> </li> </ul>"},{"location":"documentation/#usage-examples","title":"Usage Examples","text":"<p>Note</p> <p>More usage examples are available in the sample scripts.</p> <ol> <li> <p>Enable SSH on the ESXi hosts (required for VMware Cloud Foundation 4.4 and earlier) in the workload domain by using the SoS utility of the SDDC Manager appliance.</p> <ul> <li> <p>Log in to the SDDC Manager appliance by using a Secure Shell (SSH) client as <code>vcf</code>.</p> </li> <li> <p>Switch to the <code>root</code> user by running the <code>su</code> command and entering the <code>root</code> password.</p> </li> <li> <p>Run the following command:</p> <pre><code>/opt/vmware/sddc-support/sos --enable-ssh-esxi --domain domain-name\n</code></pre> </li> </ul> </li> <li> <p>On the Windows machine that is allocated to run the scripts, start PowerShell 7.x.</p> </li> <li> <p>Locate the path of the <code>VMware.CloudFoundation.PowerManagement</code> module by running the following PowerShell command:</p> <pre><code>(Get-Module -ListAvailable VMware.CloudFoundation.PowerManagement*).path\n</code></pre> <p>For example, the full path to the module may resemble:</p> <pre><code>C:\\Program Files\\WindowsPowerShell\\Modules\\VMware.CloudFoundation.PowerManagement\\1.0.0.1000\\VMware.CloudFoundation.PowerManagement.psd1\n</code></pre> </li> <li> <p>Go to the <code>SampleScripts</code> folder that is located in the same folder as the <code>VMware.CloudFoundation.PowerManagement.psd1</code> file.</p> </li> <li> <p>To shut down or start up a VI workload domain, perform these steps.</p> <ul> <li> <p>Replace the values in the sample variables with values from your environment and run the following commands in the PowerShell console:</p> <pre><code>$sddcManagerFqdn = \"sfo-vcf01.sfo.rainpole.io\"\n$sddcManagerUser = \"administrator@vsphere.local\"\n$sddcManagerPass = \"VMw@re1!\"\n$sddcDomain = \"sfo-w01\"\n</code></pre> </li> <li> <p>Run the <code>PowerManagement-WorkloadDomain.ps1</code> script:</p> <pre><code>./PowerManagement-WorkloadDomain.ps1 -server $sddcManagerFqdn -user $sddcManagerUser -pass $sddcManagerPass -sddcDomain $sddcDomain -shutdown -shutdownCustomerVm\n</code></pre> </li> </ul> <p>When you use the <code>-shutdownCustomerVm</code> parameter, the virtual machines are shut down as the first step of the process.</p> </li> <li> <p>To shut down or start up the management domain, perform these steps.</p> <ul> <li> <p>Replace the values in the sample variables with values from your environment and run the following commands in the PowerShell console:</p> <pre><code>$sddcManagerFqdn = \"sfo-vcf01.sfo.rainpole.io\"\n$sddcManagerUser = \"administrator@vsphere.local\"\n$sddcManagerPass = \"VMw@re1!\"\n</code></pre> </li> <li> <p>Run the <code>PowerManagement-ManagementDomain.ps1</code> script:</p> <pre><code>./PowerManagement-ManagementDomain.ps1 -server $sddcManagerFqdn -user $sddcManagerUser -pass $sddcManagerPass -shutdown\n\n./PowerManagement-ManagementDomain.ps1 -startup\n</code></pre> </li> </ul> <p>During the shutdown operation, the script generates a <code>ManagementStartupInput.json</code> file in the current directory. The script then uses the file for the subsequent startup of the management domain.</p> <p>Because the script overwrites the JSON file every time you run it, if you are shutting down multiple management domains, rename the file before shutting down the next domain.</p> <p>Warning</p> <p>Although the credentials in the JSON file are encrypted, treat the content of this file as sensitive data.</p> </li> </ol>"},{"location":"documentation/functions/Get-DrsAutomationLevel/","title":"Get-DrsAutomationLevel","text":""},{"location":"documentation/functions/Get-DrsAutomationLevel/#synopsis","title":"Synopsis","text":"<p>Returns the vSphere Distributed Resource Scheduler setting configured on the server for a cluster.</p>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#syntax","title":"Syntax","text":"<pre><code>Get-DrsAutomationLevel [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#description","title":"Description","text":"<p>The <code>Get-DrsAutomationLevel</code> cmdlet returns the vSphere Distributed Resource Scheduler setting configured on the server for a given cluster.</p>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-DrsAutomationLevel/#example-1","title":"Example 1","text":"<pre><code>Get-DrsAutomationLevel -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local -pass VMw@re1! -cluster sfo-m01-cl01\n</code></pre> <p>This example connects to the management vcenter server and returns the drs settings configured on the management cluster.</p>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-DrsAutomationLevel/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#-cluster","title":"-cluster","text":"<p>The name of the cluster.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-DrsAutomationLevel/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/","title":"Get-EdgeNodeFromNSXManager","text":""},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#synopsis","title":"Synopsis","text":"<p>Returns list of edge nodes virtual machines names from NSX Manager.</p>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#syntax","title":"Syntax","text":"<pre><code>Get-EdgeNodeFromNSXManager [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [[-VCfqdn] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#description","title":"Description","text":"<p>The <code>Get-EdgeNodeFromNSXManager</code> used to read edge node virtual machine names from NSX manager.</p>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#example-1","title":"Example 1","text":"<pre><code>Get-EdgeNodeFromNSXManager -server $server -user $user -pass $pass\n</code></pre> <p>This example returns list of edge nodes virtual machines name.</p>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#example-2","title":"Example 2","text":"<pre><code>Get-EdgeNodeFromNSXManager -server $server -user $user -pass $pass -VCfqdn $VCfqdn\n</code></pre> <p>This example returns list of edge nodes virtual machines name from a given virtual center only.</p>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#-server","title":"-server","text":"<p>The FQDN of the NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#-user","title":"-user","text":"<p>The username to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#-pass","title":"-pass","text":"<p>The password to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#-vcfqdn","title":"-VCfqdn","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-EdgeNodeFromNSXManager/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-MaintenanceMode/","title":"Get-MaintenanceMode","text":""},{"location":"documentation/functions/Get-MaintenanceMode/#synopsis","title":"Synopsis","text":"<p>Returns the maintenance mode status on an ESXi host.</p>"},{"location":"documentation/functions/Get-MaintenanceMode/#syntax","title":"Syntax","text":"<pre><code>Get-MaintenanceMode [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-MaintenanceMode/#description","title":"Description","text":"<p>The <code>Get-MaintenanceMode</code> cmdlet returns the maintenance mode status on an ESXi host.</p>"},{"location":"documentation/functions/Get-MaintenanceMode/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-MaintenanceMode/#example-1","title":"Example 1","text":"<pre><code>Get-MaintenanceMode -server sfo01-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1!\n</code></pre> <p>This example returns the ESXi host maintenance mode status.</p>"},{"location":"documentation/functions/Get-MaintenanceMode/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-MaintenanceMode/#-server","title":"-server","text":"<p>The FQDN of the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-MaintenanceMode/#-user","title":"-user","text":"<p>The username to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-MaintenanceMode/#-pass","title":"-pass","text":"<p>The password to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-MaintenanceMode/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-NSXTComputeManagers/","title":"Get-NSXTComputeManagers","text":""},{"location":"documentation/functions/Get-NSXTComputeManagers/#synopsis","title":"Synopsis","text":"<p>Returns the list of compute managers connected to a specified NSX Manager.</p>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#syntax","title":"Syntax","text":"<pre><code>Get-NSXTComputeManagers [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#description","title":"Description","text":"<p>The <code>Get-NSXTComputeManagers</code> cmdlet returns the list of compute managers connected to a specified NSX Manager.</p>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-NSXTComputeManagers/#example-1","title":"Example 1","text":"<pre><code>Get-NSXTComputeManagers -server $server -user $user -pass $pass\n</code></pre> <p>This example returns the list of compute managers mapped to NSX Manager $server.</p>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-NSXTComputeManagers/#-server","title":"-server","text":"<p>The FQDN of the NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#-user","title":"-user","text":"<p>The username to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#-pass","title":"-pass","text":"<p>The password to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-NSXTComputeManagers/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-SSHEnabledStatus/","title":"Get-SSHEnabledStatus","text":""},{"location":"documentation/functions/Get-SSHEnabledStatus/#synopsis","title":"Synopsis","text":"<p>Returns the SSH status on an ESXi host.</p>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#syntax","title":"Syntax","text":"<pre><code>Get-SSHEnabledStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#description","title":"Description","text":"<p>The <code>Get-SSHEnabledStatus</code> cmdlet creates a new SSH session to the given host to see if SSH is enabled. It returns true if SSH enabled.</p>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-SSHEnabledStatus/#example-1","title":"Example 1","text":"<pre><code>Get-SSHEnabledStatus -server sfo01-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1!\n</code></pre> <p>This example checks if SSH is enabled on the given host.</p>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-SSHEnabledStatus/#-server","title":"-server","text":"<p>The FQDN of the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#-user","title":"-user","text":"<p>The username to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-SSHEnabledStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/","title":"Get-TanzuEnabledClusterStatus","text":""},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#synopsis","title":"Synopsis","text":"<p>Returns the Tanzu status of a cluster.</p>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#syntax","title":"Syntax","text":"<pre><code>Get-TanzuEnabledClusterStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#description","title":"Description","text":"<p>The <code>Get-TanzuEnabledClusterStatus</code> checks if the given Cluster is Tanzu enabled.</p>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#example-1","title":"Example 1","text":"<pre><code>Get-TanzuEnabledClusterStatus -server $server -user $user -pass $pass -cluster $cluster\n</code></pre> <p>This example returns True if the given cluster is Tanzu enabled else false.</p>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#-cluster","title":"-cluster","text":"<p>The name of the cluster.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-TanzuEnabledClusterStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-VMRunningStatus/","title":"Get-VMRunningStatus","text":""},{"location":"documentation/functions/Get-VMRunningStatus/#synopsis","title":"Synopsis","text":"<p>Returns the running status of a virtual machine.</p>"},{"location":"documentation/functions/Get-VMRunningStatus/#syntax","title":"Syntax","text":"<pre><code>Get-VMRunningStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-pattern] &lt;String&gt; [[-Status] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#description","title":"Description","text":"<p>The <code>Get-VMRunningStatus</code> cmdlet returns the running status of the given nodes matching the pattern on an ESXi host.</p>"},{"location":"documentation/functions/Get-VMRunningStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-VMRunningStatus/#example-1","title":"Example 1","text":"<pre><code>Get-VMRunningStatus -server sfo-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1! -pattern \"^vCLS*\"\n</code></pre> <p>This example connects to an ESXi host and searches for all virtual machines matching the pattern and gets their running status.</p>"},{"location":"documentation/functions/Get-VMRunningStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-VMRunningStatus/#-server","title":"-server","text":"<p>The FQDN of the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#-user","title":"-user","text":"<p>The username to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#-pattern","title":"-pattern","text":"<p>The pattern to match set of virtual machines.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#-status","title":"-Status","text":"<p>The state of the virtual machine to be tested against. The value can be one amongst (\"Running\", \"NotRunning\"). The default value is \"Running\".</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: Running\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMRunningStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-VMToClusterMapping/","title":"Get-VMToClusterMapping","text":""},{"location":"documentation/functions/Get-VMToClusterMapping/#synopsis","title":"Synopsis","text":"<p>Returns a list of all virtual machines that are running on a cluster.</p>"},{"location":"documentation/functions/Get-VMToClusterMapping/#syntax","title":"Syntax","text":"<pre><code>Get-VMToClusterMapping [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String[]&gt; [-folder] &lt;String&gt; [-silence] [[-powerstate] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#description","title":"Description","text":"<p>The <code>Get-VMToClusterMapping</code> cmdlet returns a list of all virtual machines that are running on a specified cluster.</p>"},{"location":"documentation/functions/Get-VMToClusterMapping/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-VMToClusterMapping/#example-1","title":"Example 1","text":"<pre><code>Get-VMToClusterMapping -server $server -user $user -pass $pass -cluster $cluster -folder \"VCLS\"\n</code></pre> <p>This example returns all virtual machines in folder VCLS on a cluster $cluster.</p>"},{"location":"documentation/functions/Get-VMToClusterMapping/#example-2","title":"Example 2","text":"<pre><code>Get-VMToClusterMapping -server $server -user $user -pass $pass -cluster $cluster -folder \"VCLS\" -powerstate \"poweredon\"\n</code></pre> <p>This example returns only the powered-on virtual machines in folder VCLS on a cluster $cluster.</p>"},{"location":"documentation/functions/Get-VMToClusterMapping/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-VMToClusterMapping/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-cluster","title":"-cluster","text":"<p>The name of the cluster.</p> <pre><code>Type: String[]\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-folder","title":"-folder","text":"<p>The name of the folder to search for virtual machines.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-silence","title":"-silence","text":"<p>The switch to supress selected log messages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#-powerstate","title":"-powerstate","text":"<p>The powerstate of the virtual machines. The values can be one amongst (\"poweredon\",\"poweredoff\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 6\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMToClusterMapping/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/","title":"Get-VMsWithPowerStatus","text":""},{"location":"documentation/functions/Get-VMsWithPowerStatus/#synopsis","title":"Synopsis","text":"<p>Returns a list of virtual machines that are in a specified power state.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#syntax","title":"Syntax","text":"<pre><code>Get-VMsWithPowerStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-powerstate] &lt;String&gt; [[-pattern] &lt;String&gt;] [-exactMatch] [-silence] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#description","title":"Description","text":"<p>The <code>Get-VMsWithPowerStatus</code> cmdlet returns a list of virtual machines that are in a specified power state on a specified vCenter Server or ESXi host.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-VMsWithPowerStatus/#example-1","title":"Example 1","text":"<pre><code>Get-VMsWithPowerStatus -server sfo01-m01-esx01.sfo.rainpole.io -user administrator@vsphere.local -pass VMw@re1! -powerstate \"poweredon\"\n</code></pre> <p>This example connects to an ESXi host and returns the list of powered-on virtual machines.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#example-2","title":"Example 2","text":"<pre><code>Get-VMsWithPowerStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt; -pass VMw@re1! -powerstate \"poweredon\" -pattern \"sfo-wsa01\" -exactmatch\n</code></pre> <p>This example connects to a vCenter Server instance and returns a powered-on VM with name sfo-wsa01.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#example-3","title":"Example 3","text":"<pre><code>Get-VMsWithPowerStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt; -pass VMw@re1! -powerstate \"poweredon\" -pattern \"vcls\"\n</code></pre> <p>This example connects to a vCenter Server instance and returns the list of powered-on vCLS virtual machines.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#example-4","title":"Example 4","text":"<pre><code>Get-VMsWithPowerStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt; -pass VMw@re1! -powerstate \"poweredon\" -pattern \"vcls\" -silence\n</code></pre> <p>This example connects to a vCenter Server instance and returns the list of powered-on vCLS virtual machines without log messages in the output.</p>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-powerstate","title":"-powerstate","text":"<p>The powerstate of the virtual machines. The values can be one amongst (\"poweredon\",\"poweredoff\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-pattern","title":"-pattern","text":"<p>The pattern to match virtual machine names.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-exactmatch","title":"-exactMatch","text":"<p>The switch to match exact virtual machine name.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#-silence","title":"-silence","text":"<p>The switch to supress selected log messages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VMsWithPowerStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-VamiServiceStatus/","title":"Get-VamiServiceStatus","text":""},{"location":"documentation/functions/Get-VamiServiceStatus/#synopsis","title":"Synopsis","text":"<p>Returns the status of the service on a vCenter Server instance.</p>"},{"location":"documentation/functions/Get-VamiServiceStatus/#syntax","title":"Syntax","text":"<pre><code>Get-VamiServiceStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-nolog] [-service] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#description","title":"Description","text":"<p>The <code>Get-VamiServiceStatus</code> cmdlet returns the current status of the service on a given vCenter Server. The status can be STARTED/STOPPED.</p>"},{"location":"documentation/functions/Get-VamiServiceStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-VamiServiceStatus/#example-1","title":"Example 1","text":"<pre><code>Get-VAMIServiceStatus -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local -pass VMw@re1! -service wcp\n</code></pre> <p>This example connects to a vCenter Server instance and returns the wcp service status.</p>"},{"location":"documentation/functions/Get-VamiServiceStatus/#example-2","title":"Example 2","text":"<pre><code>Get-VAMIServiceStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt;  -pass VMw@re1! -service wcp -nolog\n</code></pre> <p>This example connects to a vCenter Server instance and returns the wcp service status without log messages in the output.</p>"},{"location":"documentation/functions/Get-VamiServiceStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-VamiServiceStatus/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#-nolog","title":"-nolog","text":"<p>The switch to supress selected log messages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#-service","title":"-service","text":"<p>The name of the service. The values can be one amongst (\"analytics\", \"applmgmt\", \"certificateauthority\", \"certificatemanagement\", \"cis-license\", \"content-library\", \"eam\", \"envoy\", \"hvc\", \"imagebuilder\", \"infraprofile\", \"lookupsvc\", \"netdumper\", \"observability-vapi\", \"perfcharts\", \"pschealth\", \"rbd\", \"rhttpproxy\", \"sca\", \"sps\", \"statsmonitor\", \"sts\", \"topologysvc\", \"trustmanagement\", \"updatemgr\", \"vapi-endpoint\", \"vcha\", \"vlcm\", \"vmcam\", \"vmonapi\", \"vmware-postgres-archiver\", \"vmware-vpostgres\", \"vpxd\", \"vpxd-svcs\", \"vsan-health\", \"vsm\", \"vsphere-ui\", \"vstats\", \"vtsdb\", \"wcp\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-VamiServiceStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/","title":"Get-poweronVMsOnRemoteDS","text":""},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#synopsis","title":"Synopsis","text":"<p>Returns a list of virtual machines that reside on a vSAN HCI Mesh datastore hosted in a cluster.</p>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#syntax","title":"Syntax","text":"<pre><code>Get-poweronVMsOnRemoteDS [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-clustertocheck] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#description","title":"Description","text":"<p>The <code>Get-poweronVMsOnRemoteDS</code> cmdlet returns a list of virtual machines that reside on a vSAN HCI Mesh datastore hosted in a specified cluster.</p>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#examples","title":"Examples","text":""},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#example-1","title":"Example 1","text":"<pre><code>Get-poweronVMsOnRemoteDS -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local  -Pass VMw@re1! -clustertocheck sfo-m01-cl01\n</code></pre> <p>This example returns the list of virtual machines that reside on a vSAN HCI Mesh datastore hosted in cluster sfo-m01-cl01.</p>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#-clustertocheck","title":"-clustertocheck","text":"<p>The name of the remote cluster on which virtual machines are hosted.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Get-poweronVMsOnRemoteDS/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Invoke-EsxCommand/","title":"Invoke-EsxCommand","text":""},{"location":"documentation/functions/Invoke-EsxCommand/#synopsis","title":"Synopsis","text":"<p>Runs a provided command on an ESXi host.</p>"},{"location":"documentation/functions/Invoke-EsxCommand/#syntax","title":"Syntax","text":"<pre><code>Invoke-EsxCommand [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cmd] &lt;String&gt; [[-expected] &lt;String&gt;] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#description","title":"Description","text":"<p>The <code>Invoke-EsxCommand</code> cmdlet runs a command on an ESXi host.</p> <p>If expected is not passed, then #exitstatus of 0 is considered as success.</p>"},{"location":"documentation/functions/Invoke-EsxCommand/#examples","title":"Examples","text":""},{"location":"documentation/functions/Invoke-EsxCommand/#example-1","title":"Example 1","text":"<pre><code>Invoke-EsxCommand -server sfo01-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1! -expected \"Value of IgnoreClusterMemberListUpdates is 1\" -cmd \"esxcfg-advcfg -s 0 /VSAN/IgnoreClusterMemberListUpdates\"\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Invoke-EsxCommand/#-server","title":"-server","text":"<p>The FQDN of the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#-user","title":"-user","text":"<p>The username to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#-pass","title":"-pass","text":"<p>The password to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#-cmd","title":"-cmd","text":"<p>The command to be exectued on the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#-expected","title":"-expected","text":"<p>The expected output to be compared against output returned from the command execution.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-EsxCommand/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/","title":"Invoke-VxrailClusterShutdown","text":""},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#synopsis","title":"Synopsis","text":"<p>Invoke shut down command on a VxRail Cluster</p>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#syntax","title":"Syntax","text":"<pre><code>Invoke-VxrailClusterShutdown [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt;\n</code></pre>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#description","title":"Description","text":"<p>The <code>Invoke-VxrailClusterShutdown</code> cmdlet powers off a VxRail cluster. The cmdlet will perform a dry run test prior to initiate a shutdown command on a VxRail cluster.</p>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#examples","title":"Examples","text":""},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#example-1","title":"Example 1","text":"<p><pre><code>Invoke-VxrailClusterShutdown -server sfo-w01-vxrm.sfo.rainpole.io -user administrator@vsphere.local  -Pass VMw@re1!\n</code></pre> This example powers off a Vxrail Cluster cluster which the VxRail server sfo-w01-vxrm.sfo.rainpole.io controls. </p>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#-server","title":"-server","text":"<p>The FQDN of the VxRail Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#-user","title":"-user","text":"<p>The username to authenticate to SSO service in which the VxRail is registered to.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#-pass","title":"-pass","text":"<p>The password to authenticate to SSO service in which the VxRail is registered to.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Invoke-VxrailClusterShutdown/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-DrsAutomationLevel/","title":"Set-DrsAutomationLevel","text":""},{"location":"documentation/functions/Set-DrsAutomationLevel/#synopsis","title":"Synopsis","text":"<p>Sets the vSphere Distributed Resource Scheduler automation level.</p>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#syntax","title":"Syntax","text":"<pre><code>Set-DrsAutomationLevel [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [-level] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#description","title":"Description","text":"<p>The <code>Set-DrsAutomationLevel</code> cmdlet sets the automation level of the cluster based on the setting provided.</p>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-DrsAutomationLevel/#example-1","title":"Example 1","text":"<pre><code>Set-DrsAutomationLevel -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local  -Pass VMw@re1! -cluster sfo-m01-cl01 -level PartiallyAutomated\n</code></pre> <p>This example sets the vSphere Distributed Resource Scheduler Automation level for the sfo-m01-cl01 cluster to Partially Automated.</p>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-DrsAutomationLevel/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#-cluster","title":"-cluster","text":"<p>The name of the cluster on which the vSphere Distributed Resource Scheduler automation level settings are to be applied.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#-level","title":"-level","text":"<p>The vSphere Distributed Resource Scheduler automation level to be set. The value can be one amongst (\"FullyAutomated\", \"Manual\", \"PartiallyAutomated\", \"Disabled\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-DrsAutomationLevel/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-MaintenanceMode/","title":"Set-MaintenanceMode","text":""},{"location":"documentation/functions/Set-MaintenanceMode/#synopsis","title":"Synopsis","text":"<p>Sets maintenance mode on an ESXi host.</p>"},{"location":"documentation/functions/Set-MaintenanceMode/#syntax","title":"Syntax","text":"<pre><code>Set-MaintenanceMode [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-state] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-MaintenanceMode/#description","title":"Description","text":"<p>The <code>Set-MaintenanceMode</code> cmdlet enables or disables maintenance mode on an ESXi host.</p>"},{"location":"documentation/functions/Set-MaintenanceMode/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-MaintenanceMode/#example-1","title":"Example 1","text":"<pre><code>Set-MaintenanceMode -server sfo01-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1! -state ENABLE\n</code></pre> <p>This example places an ESXi host in maintenance mode.</p>"},{"location":"documentation/functions/Set-MaintenanceMode/#example-2","title":"Example 2","text":"<pre><code>Set-MaintenanceMode -server sfo01-w01-esx01.sfo.rainpole.io -user root -pass VMw@re1! -state DISABLE\n</code></pre> <p>This example takes an ESXi host out of maintenance mode.</p>"},{"location":"documentation/functions/Set-MaintenanceMode/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-MaintenanceMode/#-server","title":"-server","text":"<p>The FQDN of the ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-MaintenanceMode/#-user","title":"-user","text":"<p>The username to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-MaintenanceMode/#-pass","title":"-pass","text":"<p>The password to authenticate to ESXi host.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-MaintenanceMode/#-state","title":"-state","text":"<p>The state of the maintenance mode to be set on ESXi host. Allowed states are \"ENABLE\" or \"DISABLE\".</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-MaintenanceMode/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-Retreatmode/","title":"Set-Retreatmode","text":""},{"location":"documentation/functions/Set-Retreatmode/#synopsis","title":"Synopsis","text":"<p>Sets retreat mode for vSphere Cluster Services (vCLS) virtual machines on a cluster.</p>"},{"location":"documentation/functions/Set-Retreatmode/#syntax","title":"Syntax","text":"<pre><code>Set-Retreatmode [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [-mode] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#description","title":"Description","text":"<p>The <code>Set-Retreatmode</code> cmdlet enables or disables retreat mode for the vSphere Cluster Services (vCLS) virtual machines.</p>"},{"location":"documentation/functions/Set-Retreatmode/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-Retreatmode/#example-1","title":"Example 1","text":"<pre><code>Set-Retreatmode -server $server -user $user -pass $pass -cluster $cluster -mode enable\n</code></pre> <p>This example places the vSphere Cluster virtual machines (vCLS) in the retreat mode.</p>"},{"location":"documentation/functions/Set-Retreatmode/#example-2","title":"Example 2","text":"<pre><code>Set-Retreatmode -server $server -user $user -pass $pass -cluster $cluster -mode disable\n</code></pre> <p>This example takes places the vSphere Cluster Services (vCLS) virtual machines out of retreat mode.</p>"},{"location":"documentation/functions/Set-Retreatmode/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-Retreatmode/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#-cluster","title":"-cluster","text":"<p>The name of the cluster.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#-mode","title":"-mode","text":"<p>The name of the retreat mode. The value is one amongst (\"enable\", \"disable\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-Retreatmode/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-VamiServiceStatus/","title":"Set-VamiServiceStatus","text":""},{"location":"documentation/functions/Set-VamiServiceStatus/#synopsis","title":"Synopsis","text":"<p>Starts, stops, or restarts a service on a vCenter Server instance.</p>"},{"location":"documentation/functions/Set-VamiServiceStatus/#syntax","title":"Syntax","text":"<pre><code>Set-VamiServiceStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-state] &lt;String&gt; [-nolog] [-service] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#description","title":"Description","text":"<p>The <code>Set-VamiServiceStatus</code> cmdlet starts, stops, or restarts a specified management appliance service on a specified vCenter Server instance.</p>"},{"location":"documentation/functions/Set-VamiServiceStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-VamiServiceStatus/#example-1","title":"Example 1","text":"<pre><code>Set-VamiServiceStatus -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local -pass VMw@re1! -service wcp -state \"start\"\n</code></pre> <p>This example connects to a vCenter Server instance and starts the wcp service.</p> <pre><code>Set-VamiServiceStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt;  -pass VMw@re1! -service wcp -nolog -state \"restart\"\n</code></pre> <p>This example connects to a vCenter Server instance and restarts the wcp service without log messages in the output.</p>"},{"location":"documentation/functions/Set-VamiServiceStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-VamiServiceStatus/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#-state","title":"-state","text":"<p>The state of the servcie. The values can be one amongst (\"start\", \"stop\", \"restart\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#-nolog","title":"-nolog","text":"<p>The switch to supress selected log messages.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#-service","title":"-service","text":"<p>The name of the service. The values can be one amongst (\"analytics\", \"applmgmt\", \"certificateauthority\", \"certificatemanagement\", \"cis-license\", \"content-library\", \"eam\", \"envoy\", \"hvc\", \"imagebuilder\", \"infraprofile\", \"lookupsvc\", \"netdumper\", \"observability-vapi\", \"perfcharts\", \"pschealth\", \"rbd\", \"rhttpproxy\", \"sca\", \"sps\", \"statsmonitor\", \"sts\", \"topologysvc\", \"trustmanagement\", \"updatemgr\", \"vapi-endpoint\", \"vcha\", \"vlcm\", \"vmcam\", \"vmonapi\", \"vmware-postgres-archiver\", \"vmware-vpostgres\", \"vpxd\", \"vpxd-svcs\", \"vsan-health\", \"vsm\", \"vsphere-ui\", \"vstats\", \"vtsdb\", \"wcp\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VamiServiceStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/","title":"Set-VsanClusterPowerStatus","text":""},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#synopsis","title":"Synopsis","text":"<p>Set the power status of a vSAN cluster.</p>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#syntax","title":"Syntax","text":"<pre><code>Set-VsanClusterPowerStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-clustername] &lt;String&gt; [-mgmt] [-PowerStatus] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#description","title":"Description","text":"<p>The <code>Set-VsanClusterPowerStatus</code> cmdlet sets the power status of a vSAN cluster.</p>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#example-1","title":"Example 1","text":"<pre><code>Set-VsanClusterPowerStatus -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local  -Pass VMw@re1! -cluster sfo-m01-cl01 -PowerStatus clusterPoweredOff\n</code></pre> <p>This example powers off cluster sfo-m01-cl01.</p>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#example-2","title":"Example 2","text":"<pre><code>Set-VsanClusterPowerStatus -server sfo-m01-vc01.sfo.rainpole.io -user &lt;administrator@vsphere.local&gt;  -Pass VMw@re1! -cluster sfo-m01-cl01 -PowerStatus clusterPoweredOn\n</code></pre> <p>This example powers on cluster sfo-m01-cl01.</p>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-clustername","title":"-clustername","text":"<p>The name of the vSAN cluster on which the power settings are to be applied.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-mgmt","title":"-mgmt","text":"<p>The switch used to ignore power settings if management domain information is passed.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#-powerstatus","title":"-PowerStatus","text":"<p>The power state to be set for a given vSAN cluster. The value can be one amongst (\"clusterPoweredOff\", \"clusterPoweredOn\").</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 5\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsanClusterPowerStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Set-VsphereHA/","title":"Set-VsphereHA","text":""},{"location":"documentation/functions/Set-VsphereHA/#synopsis","title":"Synopsis","text":"<p>Sets vSphere High Availability to enabled or disabled for a cluster.</p>"},{"location":"documentation/functions/Set-VsphereHA/#syntax","title":"Syntax","text":""},{"location":"documentation/functions/Set-VsphereHA/#enable","title":"enable","text":"<pre><code>Set-VsphereHA -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -cluster &lt;String&gt; [-enableHA] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#disable","title":"disable","text":"<pre><code>Set-VsphereHA -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -cluster &lt;String&gt; [-disableHA] [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#description","title":"Description","text":"<p>The <code>Set-VsphereHA</code> cmdlet sets vSphere High Availability to enabled or disabled for a cluster.</p>"},{"location":"documentation/functions/Set-VsphereHA/#examples","title":"Examples","text":""},{"location":"documentation/functions/Set-VsphereHA/#example-1","title":"Example 1","text":"<pre><code>Set-VsphereHA -server $server -user $user -pass $pass -cluster $cluster -enable\n</code></pre> <p>This example sets vSphere High Availability to enabled/active.</p>"},{"location":"documentation/functions/Set-VsphereHA/#example-2","title":"Example 2","text":"<pre><code>Set-VsphereHA -server $server -user $user -pass $pass -cluster $cluster -disable\n</code></pre> <p>This example sets vSphere High Availability to disabled/stopped.</p>"},{"location":"documentation/functions/Set-VsphereHA/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Set-VsphereHA/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#-cluster","title":"-cluster","text":"<p>The name of the cluster.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#-enableha","title":"-enableHA","text":"<p>The switch to enable vSphere High Availability.</p> <pre><code>Type: SwitchParameter\nParameter Sets: enable\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#-disableha","title":"-disableHA","text":"<p>The switch to disable vSphere High Availability.</p> <pre><code>Type: SwitchParameter\nParameter Sets: disable\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Set-VsphereHA/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Start-CloudComponent/","title":"Start-CloudComponent","text":""},{"location":"documentation/functions/Start-CloudComponent/#synopsis","title":"Synopsis","text":"<p>Starts up a node or nodes in a vCenter Server inventory.</p>"},{"location":"documentation/functions/Start-CloudComponent/#syntax","title":"Syntax","text":""},{"location":"documentation/functions/Start-CloudComponent/#node","title":"Node","text":"<pre><code>Start-CloudComponent -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -timeout &lt;Int32&gt; -nodes &lt;String[]&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#pattern","title":"Pattern","text":"<pre><code>Start-CloudComponent -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -timeout &lt;Int32&gt; -pattern &lt;String[]&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#description","title":"Description","text":"<p>The <code>Start-CloudComponent</code> cmdlet starts up a node or nodes in a vCenter Server inventory.</p>"},{"location":"documentation/functions/Start-CloudComponent/#examples","title":"Examples","text":""},{"location":"documentation/functions/Start-CloudComponent/#example-1","title":"Example 1","text":"<pre><code>Start-CloudComponent -server sfo-m01-vc01.sfo.rainpole.io -user adminstrator@vsphere.local -pass VMw@re1! -timeout 20 -nodes \"sfo-m01-en01\", \"sfo-m01-en02\"\n</code></pre> <p>This example connects to a vCenter Server and starts up the nodes sfo-m01-en01 and sfo-m01-en02.</p>"},{"location":"documentation/functions/Start-CloudComponent/#example-2","title":"Example 2","text":"<pre><code>Start-CloudComponent -server sfo-m01-vc01.sfo.rainpole.io -user root -pass VMw@re1! -timeout 20 pattern \"^vCLS.*\"\n</code></pre> <p>This example connects to an ESXi Host and starts up the nodes that match the pattern vCLS.*.</p>"},{"location":"documentation/functions/Start-CloudComponent/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Start-CloudComponent/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#-timeout","title":"-timeout","text":"<p>The timeout in seconds to wait for the cloud component to reach the desired connection state.</p> <pre><code>Type: Int32\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: 0\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#-nodes","title":"-nodes","text":"<p>The FQDNs of the list of cloud components to startup.</p> <pre><code>Type: String[]\nParameter Sets: Node\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#-pattern","title":"-pattern","text":"<p>The cloud components matching the pattern in the SDDC Manager inventory to be startup.</p> <pre><code>Type: String[]\nParameter Sets: Pattern\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Start-CloudComponent/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Stop-CloudComponent/","title":"Stop-CloudComponent","text":""},{"location":"documentation/functions/Stop-CloudComponent/#synopsis","title":"Synopsis","text":"<p>Shuts down a node or nodes in a vCenter Server inventory.</p>"},{"location":"documentation/functions/Stop-CloudComponent/#syntax","title":"Syntax","text":""},{"location":"documentation/functions/Stop-CloudComponent/#node","title":"Node","text":"<pre><code>Stop-CloudComponent -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -timeout &lt;Int32&gt; [-noWait] -nodes &lt;String[]&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#pattern","title":"Pattern","text":"<pre><code>Stop-CloudComponent -server &lt;String&gt; -user &lt;String&gt; -pass &lt;String&gt; -timeout &lt;Int32&gt; [-noWait] -pattern &lt;String[]&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#description","title":"Description","text":"<p>The <code>Stop-CloudComponent</code> cmdlet shuts down a node or nodes in a vCenter Server inventory.</p>"},{"location":"documentation/functions/Stop-CloudComponent/#examples","title":"Examples","text":""},{"location":"documentation/functions/Stop-CloudComponent/#example-1","title":"Example 1","text":"<pre><code>Stop-CloudComponent -server sfo-m01-vc01.sfo.rainpole.io -user adminstrator@vsphere.local -pass VMw@re1! -timeout 20 -nodes \"sfo-m01-en01\", \"sfo-m01-en02\"\n</code></pre> <p>This example connects to a vCenter Server and shuts down the nodes sfo-m01-en01 and sfo-m01-en02.</p>"},{"location":"documentation/functions/Stop-CloudComponent/#example-2","title":"Example 2","text":"<pre><code>Stop-CloudComponent -server sfo-m01-vc01.sfo.rainpole.io -user root -pass VMw@re1! -timeout 20 pattern \"^vCLS.*\"\n</code></pre> <p>This example connects to an ESXi Host and shuts down the nodes that match the pattern vCLS.*.</p>"},{"location":"documentation/functions/Stop-CloudComponent/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Stop-CloudComponent/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-timeout","title":"-timeout","text":"<p>The timeout in seconds to wait for the cloud component to reach the desired connection state.</p> <pre><code>Type: Int32\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: 0\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-nowait","title":"-noWait","text":"<p>To shudown the cloud component and not wait for desired connection state change.</p> <pre><code>Type: SwitchParameter\nParameter Sets: (All)\nAliases:\n\nRequired: False\nPosition: Named\nDefault value: False\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-nodes","title":"-nodes","text":"<p>The FQDNs of the list of cloud components to shutdown.</p> <pre><code>Type: String[]\nParameter Sets: Node\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#-pattern","title":"-pattern","text":"<p>The cloud components matching the pattern in the SDDC Manager inventory to be shutdown.</p> <pre><code>Type: String[]\nParameter Sets: Pattern\nAliases:\n\nRequired: True\nPosition: Named\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Stop-CloudComponent/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Test-LockdownMode/","title":"Test-LockdownMode","text":""},{"location":"documentation/functions/Test-LockdownMode/#synopsis","title":"Synopsis","text":"<p>Test if ESXi hosts in a cluster are in lockdown mode.</p>"},{"location":"documentation/functions/Test-LockdownMode/#syntax","title":"Syntax","text":"<pre><code>Test-LockdownMode [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Test-LockdownMode/#description","title":"Description","text":"<p>The <code>Test-LockdownMode</code> cmdlet tests if ESXi hosts in a cluster are in lockdown mode. The cmdlet returns an error if an ESXi host in the cluster is in lockdown mode.</p>"},{"location":"documentation/functions/Test-LockdownMode/#examples","title":"Examples","text":""},{"location":"documentation/functions/Test-LockdownMode/#example-1","title":"Example 1","text":"<pre><code>Test-LockdownMode -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local  -Pass VMw@re1! -cluster sfo-m01-cl01\n</code></pre> <p>This example checks if some of the ESXi hosts in the cluster sfo-m01-cl01 is in lockdown mode.</p>"},{"location":"documentation/functions/Test-LockdownMode/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Test-LockdownMode/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-LockdownMode/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-LockdownMode/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-LockdownMode/#-cluster","title":"-cluster","text":"<p>The name of the cluster to be checked for locked down ESXi hosts if any.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-LockdownMode/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Test-VsanHealth/","title":"Test-VsanHealth","text":""},{"location":"documentation/functions/Test-VsanHealth/#synopsis","title":"Synopsis","text":"<p>Tests the vSAN health of a cluster.</p>"},{"location":"documentation/functions/Test-VsanHealth/#syntax","title":"Syntax","text":"<pre><code>Test-VsanHealth [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Test-VsanHealth/#description","title":"Description","text":"<p>The <code>Test-VsanHealth</code> cmdlet returns the vSAN health of a cluster.</p>"},{"location":"documentation/functions/Test-VsanHealth/#examples","title":"Examples","text":""},{"location":"documentation/functions/Test-VsanHealth/#example-1","title":"Example 1","text":"<pre><code>Test-VsanHealth -cluster sfo-m01-cl01 -server sfo-m01-vc01 -user administrator@vsphere.local -pass VMw@re1!\n</code></pre> <p>This example connects to a vCenter Server and checks the state of the vSAN cluster health.</p>"},{"location":"documentation/functions/Test-VsanHealth/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Test-VsanHealth/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanHealth/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanHealth/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanHealth/#-cluster","title":"-cluster","text":"<p>The name of the vSAN cluster on which health has to be checked.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanHealth/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Test-VsanObjectResync/","title":"Test-VsanObjectResync","text":""},{"location":"documentation/functions/Test-VsanObjectResync/#synopsis","title":"Synopsis","text":"<p>Test the vSAN object resync status for a cluster.</p>"},{"location":"documentation/functions/Test-VsanObjectResync/#syntax","title":"Syntax","text":"<pre><code>Test-VsanObjectResync [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [-cluster] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Test-VsanObjectResync/#description","title":"Description","text":"<p>The <code>Test-VsanObjectResync</code> cmdlet returns the vSAN object resync status for a cluster.</p>"},{"location":"documentation/functions/Test-VsanObjectResync/#examples","title":"Examples","text":""},{"location":"documentation/functions/Test-VsanObjectResync/#example-1","title":"Example 1","text":"<pre><code>Test-VsanObjectResync -cluster sfo-m01-cl01 -server sfo-m01-vc01.sfo.rainpole.io -user administrator@vsphere.local -pass VMw@re1!\n</code></pre> <p>This example connects to a vCenter Server and checks the status of object syncing for the vSAN cluster.</p>"},{"location":"documentation/functions/Test-VsanObjectResync/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Test-VsanObjectResync/#-server","title":"-server","text":"<p>The FQDN of the vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanObjectResync/#-user","title":"-user","text":"<p>The username to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanObjectResync/#-pass","title":"-pass","text":"<p>The password to authenticate to vCenter Server.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanObjectResync/#-cluster","title":"-cluster","text":"<p>The name of the vSAN cluster on which object resynchronization status has to be checked.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 4\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Test-VsanObjectResync/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/","title":"Wait-ForStableNsxtClusterStatus","text":""},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#synopsis","title":"Synopsis","text":"<p>Returns the cluster status of an NSX Manager after a restart.</p>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#syntax","title":"Syntax","text":"<pre><code>Wait-ForStableNsxtClusterStatus [-server] &lt;String&gt; [-user] &lt;String&gt; [-pass] &lt;String&gt; [&lt;CommonParameters&gt;]\n</code></pre>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#description","title":"Description","text":"<p>The <code>Wait-ForStableNsxtClusterStatus</code> cmdlet returns the cluster status of an NSX manager after a restart.</p>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#examples","title":"Examples","text":""},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#example-1","title":"Example 1","text":"<pre><code>Wait-ForStableNsxtClusterStatus -server sfo-m01-nsx01.sfo.rainpole.io -user admin -pass VMw@re1!VMw@re1!\n</code></pre> <p>This example gets the cluster status of the sfo-m01-nsx01.sfo.rainpole.io NSX Management Cluster.</p>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#parameters","title":"Parameters","text":""},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#-server","title":"-server","text":"<p>The FQDN of the NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 1\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#-user","title":"-user","text":"<p>The username to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 2\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#-pass","title":"-pass","text":"<p>The password to authenticate to NSX Manager.</p> <pre><code>Type: String\nParameter Sets: (All)\nAliases:\n\nRequired: True\nPosition: 3\nDefault value: None\nAccept pipeline input: False\nAccept wildcard characters: False\n</code></pre>"},{"location":"documentation/functions/Wait-ForStableNsxtClusterStatus/#common-parameters","title":"Common Parameters","text":"<p>This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters.</p>"},{"location":"documentation/getting-started/install/","title":"Installing the Module","text":"<p>Verify that your system has a supported edition and version of PowerShell installed.</p>  \u00a0 Connected Environment \u00a0 Disconnected Environment <p>For environments connected to the Internet, you can install the module dependencies from the PowerShell Gallery by running the following commands in the PowerShell console:</p> <pre><code>Set-PSRepository -Name PSGallery -InstallationPolicy Trusted\nInstall-Module -Name VMware.PowerCLI -MinimumVersion 13.3.0 -Repository PSGallery\nInstall-Module -Name PowerVCF -MinimumVersion 2.4.1 -Repository PSGallery\nInstall-Module -Name PowerValidatedSolutions -MinimumVersion 2.11.0 -Repository PSGallery\nInstall-Module -Name Posh-SSH -MinimumVersion 3.0.8 -Repository PSGallery\nInstall-Module -Name VMware.CloudFoundation.PowerManagement -Repository PSGallery\n</code></pre> <p>In PowerShell Core, import the modules before proceeding:</p> <p>For example:</p> <pre><code>Import-Module -Name VMware.CloudFoundation.PowerManagement\n</code></pre> <p>For environments disconnected from the Internet (e.g., dark-site, air-gapped), you can save the module dependencies from the PowerShell Gallery by running the following commands in the PowerShell console:</p>  \u00a0 Windows \u00a0 Linux <p>From a system with an Internet connection, save the module dependencies from the PowerShell Gallery by running the following commands in the PowerShell console:</p> <pre><code>Save-Module -Name VMware.PowerCLI -MinimumVersion 13.3.0 -Path F:\\Module\\ -Repository PSGallery\nSave-Module -Name PowerVCF -MinimumVersion 2.4.1 -Path F:\\Module\\ -Repository PSGallery\nSave-Module -Name PowerValidatedSolutions -MinimumVersion 2.11.0 -Path F:\\Module\\ -Repository PSGallery\nSave-Module -Name Posh-SSH -MinimumVersion 3.0.8 -Path F:\\Module\\ -Repository PSGallery\nSave-Module -Name VMware.CloudFoundation.PowerManagement -Path F:\\Module\\ -Repository PSGallery\n</code></pre> <p>From the system with the Internet connection, copy the module dependencies to a target system by running the following commands in the PowerShell console:</p> <pre><code>Copy-Item -Path F:\\Module\\* -Destination '\\\\&lt;destination_host&gt;\\C$\\Program Files\\WindowsPowerShell\\Modules\\' -Recurse\n</code></pre> <p>On the target system, import the module dependencies by running the following commands in the PowerShell console:</p> <pre><code>Import-Module -Name VMware.CloudFoundation.PowerManagement\n</code></pre> <p>Prerequisite for module install on Linux Machine</p> <pre><code>$DownloadDir = \"~/DownloadModules\"\nmkdir $DownloadDir\n</code></pre> <p>From a system with an Internet connection, save the module dependencies from the PowerShell Gallery by running the following commands in the PowerShell console:</p> <pre><code>Save-Module -Name VMware.PowerCLI -Path $DownloadDir -Repository PSGallery\nSave-Module -Name PowerVCF -Path $DownloadDir -Repository PSGallery\nSave-Module -Name Posh-SSH -Path $DownloadDir -Repository PSGallery\nSave-Module -Name PowerValidatedSolutions -Path $DownloadDir -Repository PSGallery\nSave-Module -Name VMware.CloudFoundation.PowerManagement -Path $DownloadDir -Repository PSGallery\ncd $DownloadDir\ntar -zcvf OfflineModules.tar.gz *\n</code></pre> <p>From the system with an Internet connection, copy the <code>OfflineModules.tar.gz</code> archive to a target system's directory:</p> <pre><code>~/.local/share/powershell/Modules/\n</code></pre> <p>On the target system, extract the archive uploaded in the previous step by running the following commands:</p> <p><pre><code>cd ~/.local/share/powershell/Modules/\ntar -zxvf OfflineModules.tar.gz\nrm -rf OfflineModules.tar.gz\n</code></pre> On the target system, import the module dependencies by running the following commands in the PowerShell console:</p> <pre><code>Import-Module -Name VMware.CloudFoundation.PowerManagement\n</code></pre> <p>Once installed, any cmdlets associated with <code>VMware.CloudFoundation.PowerManagement</code> and the its dependencies will be available for use.</p> <p>To view the cmdlets for available in the module, run the following command in the PowerShell console.</p> <pre><code>Get-Command -Module VMware.CloudFoundation.PowerManagement\n</code></pre> <p>To view the help for any cmdlet, run the <code>Get-Help</code> command in the PowerShell console.</p> <p>For example:</p> <pre><code>Get-Help -Name &lt;cmdlet-name&gt;\n</code></pre> <pre><code>Get-Help -Name &lt;cmdlet-name&gt; -Examples\n</code></pre>"},{"location":"documentation/getting-started/known-issues/","title":"Known Issues","text":"<ul> <li> <p>For VMware Cloud Foundation 4.5 and later, if you have multiple clusters in a single workload domain manual intervention is required during startup. Clusters should be put in the correct status (shutdown). See Scenario 3 in KB 87350.</p> </li> <li> <p>From all service virtual machines deployed by vSphere ESX Agent Manager, automated shutdown will only be performed on the vCLS virtual machines. All other service virtual machines (e.g., vSAN File Service nodes) will lead to an error in the script. Clusters with such virtual machines should be stopped through vCenter Server.</p> </li> <li> <p>For workload domains with multiple clusters, if you do not specify shut down order the clusters will be stopped in the order returned from SDDC Manager API. For granular control, please use the <code>-vsanCluster</code> parameter.</p> </li> <li> <p>Workspace ONE Access that is integrated with NSX, should be started manually. For VMware Cloud Foundation 4.5 and later, this can be done before using the script for starting the management domain.</p> </li> <li> <p>All vCenter Server instances for workload domains will be started with the first workload domain in order to get full inventory information in SDDC Manager.</p> </li> </ul>"},{"location":"documentation/getting-started/limitations/","title":"Limitations","text":"<ul> <li> <p>VMware Cloud Foundation on Dell EMC VxRail is not supported.</p> </li> <li> <p>For VMware Cloud Foundation 4.5 and later, lockdown mode must be disabled on each ESXi host before shut down. You can enable lockdown mode after startup is completed.</p> </li> <li> <p>For VMware Cloud Foundation 4.4 and earlier, you must shut down the ESXi hosts manually. The scripts only place the ESXi hosts in maintenance mode.</p> </li> <li> <p>For VMware Cloud Foundation 4.4 and earlier, the SSH service on the ESXi hosts must be running.</p> </li> <li> <p>The sample scripts do not startup ESXi hosts. ESXi hosts must be started before running the scripts.</p> </li> <li> <p>The sample script for management domain only works on a management domain with a single cluster.</p> </li> <li> <p>If bare-metal NSX Edge nodes are used in your environment, you must stop and start the bare-metal NSX Edge nodes manually.</p> </li> <li> <p>Shutdown and startup operations are not support for the following platform extensions: vSphere with Tanzu, vSphere Replication, Site Recovery Manager, Aria Suite (formerly vRealize Suite), and Workspace ONE Access.</p> </li> <li> <p>VMware Tools must be running in virtual machines to shut down virtual machines in the management or VI workload domains using the sample script. The virtual machines are shut down in a random order using the \"Shutdown Guest OS\" command from vCenter Server.</p> </li> <li> <p>THe sample scripts cannot handle simultaneous connections to multiple services. In the script's console, all sessions to services that are not used at the moment will be disconnected.</p> </li> </ul>"},{"location":"documentation/getting-started/troubleshooting/","title":"Troubleshooting","text":"<ul> <li> <p>For VMware Cloud Foundation 4.4 and earlier, the SSH service on the ESXi hosts must be running. SSH must be accessible from the machine running the scripts.</p> </li> <li> <p>In the event of a failure, attempt to run the script with the same parameters in order to overcome the errors. If unsuccessful, identify the step that is causing the issue and continue the sequence following the manual guidance in VMware Cloud Foundation documentation.</p> </li> <li> <p>During shutdown of the management domain, if SDDC Manager is already powered off, the only option is to continue by following the manual guidance in the VMware Cloud Foundation documentation.</p> </li> </ul>"},{"location":"documentation/getting-started/update/","title":"Updating the Module","text":"<p>Update the PowerShell module from the PowerShell Gallery by running the following commands:</p> <pre><code>Update-Module -Name VMware.CloudFoundation.PowerManagement\n</code></pre> <p>To verify that the PowerShell module is updated, run the following command in the PowerShell console.</p> <pre><code>Get-InstalledModule -Name VMware.CloudFoundation.PowerManagement\n</code></pre> <p>If a dependency does not meet the minimum requirements, run the appropriate <code>Update-Module</code> command for the dependency in the PowerShell console.</p> <pre><code>Update-Module -Name VMware.PowerCLI\nUpdate-Module -Name PowerVCF\nUpdate-Module -Name PowerValidatedSolutions\nUpdate-Module -Name Posh-SSH\n</code></pre>"},{"location":"documentation/getting-started/usage/","title":"Using the Module","text":""},{"location":"documentation/getting-started/usage/#prerequisites","title":"Prerequisites","text":"<ul> <li> <p>Add forward and reverse DNS records for the client machine running the scripts.</p> </li> <li> <p>Verify that SDDC Manager is powered on and operational.</p> </li> <li> <p>Before you shut down the management domain, get the credentials for the management domain ESXi hosts and vCenter Server instance from SDDC Manager and save them for troubleshooting or a subsequent manual startup. Because SDDC Manager is powered off during each of these operations, you must save the credentials in advance.</p> </li> </ul> <p>To get the credentials, use the <code>Get-VCFCredential</code> cmdlet from the <code>PowerVCF</code> module.</p> <p>If using Windows 10 or 11, configure the PowerShell execution policy with the permissions required to run the commands.</p> <ul> <li> <p>Run the following command to get the active execution policy:</p> <pre><code>Execute Get-ExecutionPolicy\n</code></pre> </li> <li> <p>If the command returns <code>Restricted</code>, run the following command:</p> <pre><code>Set-ExecutionPolicy RemoteSigned\n</code></pre> </li> <li> <p>If the target system uses self-signed or untrusted certificates, configure PowerCLI to ignore.</p> <pre><code>Set-PowerCLIConfiguration -InvalidCertificateAction Ignore -Confirm:$false\n</code></pre> </li> </ul>"},{"location":"documentation/getting-started/usage/#sample-scripts","title":"Sample Scripts","text":"<ul> <li> <p><code>PowerManagement-ManagementDomain.ps1</code> - shutdown or startup all software components in the management domain.</p> <p>Note</p> <p>The script does not support shutdown of Aria Suite (formerly vRealize Suite).  Shut down the Aria Suite components in your environment before running the script.</p> </li> <li> <p><code>PowerManagement-WorkloadDomain.ps1</code> - Shut down or start up the management components for a workload domain.</p> <p>Note</p> <p>The script does not support vSphere with Tanzu.</p> </li> </ul>"},{"location":"documentation/getting-started/usage/#usage-examples","title":"Usage Examples","text":"<p>Note</p> <p>More usage examples are available in the sample scripts.</p> <ol> <li> <p>Enable SSH on the ESXi hosts (required for VMware Cloud Foundation 4.4 and earlier) in the workload domain by using the SoS utility of the SDDC Manager appliance.</p> <ul> <li> <p>Log in to the SDDC Manager appliance by using a Secure Shell (SSH) client as <code>vcf</code>.</p> </li> <li> <p>Switch to the <code>root</code> user by running the <code>su</code> command and entering the <code>root</code> password.</p> </li> <li> <p>Run the following command:</p> <pre><code>/opt/vmware/sddc-support/sos --enable-ssh-esxi --domain domain-name\n</code></pre> </li> </ul> </li> <li> <p>On the Windows machine that is allocated to run the scripts, start PowerShell 7.x.</p> </li> <li> <p>Locate the path of the <code>VMware.CloudFoundation.PowerManagement</code> module by running the following PowerShell command:</p> <pre><code>(Get-Module -ListAvailable VMware.CloudFoundation.PowerManagement*).path\n</code></pre> <p>For example, the full path to the module may resemble:</p> <pre><code>C:\\Program Files\\WindowsPowerShell\\Modules\\VMware.CloudFoundation.PowerManagement\\1.0.0.1000\\VMware.CloudFoundation.PowerManagement.psd1\n</code></pre> </li> <li> <p>Go to the <code>SampleScripts</code> folder that is located in the same folder as the <code>VMware.CloudFoundation.PowerManagement.psd1</code> file.</p> </li> <li> <p>To shut down or start up a VI workload domain, perform these steps.</p> <ul> <li> <p>Replace the values in the sample variables with values from your environment and run the following commands in the PowerShell console:</p> <pre><code>$sddcManagerFqdn = \"sfo-vcf01.sfo.rainpole.io\"\n$sddcManagerUser = \"administrator@vsphere.local\"\n$sddcManagerPass = \"VMw@re1!\"\n$sddcDomain = \"sfo-w01\"\n</code></pre> </li> <li> <p>Run the <code>PowerManagement-WorkloadDomain.ps1</code> script:</p> <pre><code>./PowerManagement-WorkloadDomain.ps1 -server $sddcManagerFqdn -user $sddcManagerUser -pass $sddcManagerPass -sddcDomain $sddcDomain -shutdown -shutdownCustomerVm\n</code></pre> </li> </ul> <p>When you use the <code>-shutdownCustomerVm</code> parameter, the virtual machines are shut down as the first step of the process.</p> </li> <li> <p>To shut down or start up the management domain, perform these steps.</p> <ul> <li> <p>Replace the values in the sample variables with values from your environment and run the following commands in the PowerShell console:</p> <pre><code>$sddcManagerFqdn = \"sfo-vcf01.sfo.rainpole.io\"\n$sddcManagerUser = \"administrator@vsphere.local\"\n$sddcManagerPass = \"VMw@re1!\"\n</code></pre> </li> <li> <p>Run the <code>PowerManagement-ManagementDomain.ps1</code> script:</p> <pre><code>./PowerManagement-ManagementDomain.ps1 -server $sddcManagerFqdn -user $sddcManagerUser -pass $sddcManagerPass -shutdown\n\n./PowerManagement-ManagementDomain.ps1 -startup\n</code></pre> </li> </ul> <p>During the shutdown operation, the script generates a <code>ManagementStartupInput.json</code> file in the current directory. The script then uses the file for the subsequent startup of the management domain.</p> <p>Because the script overwrites the JSON file every time you run it, if you are shutting down multiple management domains, rename the file before shutting down the next domain.</p> <p>Warning</p> <p>Although the credentials in the JSON file are encrypted, treat the content of this file as sensitive data.</p> </li> </ol>"},{"location":"documentation/getting-started/user-access/","title":"User Access","text":"<p>Each cmdlet may provide one or more usage examples. Many of the cmdlets require that credentials are provided to output to the PowerShell console or a report.</p> <p>The cmdlets in this module, and its dependencies, return data from multple platform components. The credentials for most of the platform components are returned to the cmdlets by retrieving credentials from the SDDC Manager inventory and using these credentials, as needed, within cmdlet operations.</p> <p>For the best expereince, for cmdlets that connect to SDDC Manager, use the VMware Cloud Foundation API user <code>admin@local</code> or an account with the ADMIN role in SDDC Manager (e.g., <code>administrator@vsphere.local</code>).</p>"}]}